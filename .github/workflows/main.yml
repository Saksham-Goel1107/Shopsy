name: Shopsy CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '19'  
  FRONTEND_DIR: './shop'
  BACKEND_DIR: './Backend'

jobs:
  frontend-validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

    - name: Install Dependencies
      run: npm ci  

    - name: Run ESLint
      run: npm run lint
      
    - name: Check Build
      run: npm run build
      env:
        VITE_APP_BASE_URL: ${{ secrets.VITE_APP_BASE_URL }}
        VITE_APP_FIREBASE_API_KEY: ${{ secrets.VITE_APP_FIREBASE_API_KEY }}
        VITE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_APP_FIREBASE_AUTH_DOMAIN }}

  backend-validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACKEND_DIR }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.BACKEND_DIR }}/package-lock.json

    - name: Install Dependencies
      run: npm ci

    - name: Check for syntax errors
      run: node --check index.js

  security:
    needs: [frontend-validation, backend-validation]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --all-projects

  deploy:
    needs: [frontend-validation, backend-validation, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - uses: actions/checkout@v3

    - name: Ensure Required Secrets are Set
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
          echo "Critical secrets are missing!"
          exit 1
        fi

    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./shop
        vercel-args: '--prod'

    - name: Deploy Backend to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "accept: application/json" \
          -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

    - name: Check Render Deployment Status
      run: |
        DEPLOY_STATUS=$(curl -s "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
        -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" | jq -r '.[0].status')
        
        if [[ "$DEPLOY_STATUS" != "succeeded" ]]; then
          echo "Render deployment failed!"
          exit 1
        fi
        echo "Render deployment succeeded!"

    - name: Create Deployment Status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const { job, conclusion } = context;
          const status = conclusion === 'success' ? '✅' : '❌';
          const message = `Deployment ${status}\nFrontend: https://shopify-tau-seven.vercel.app/`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: message
          });

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
